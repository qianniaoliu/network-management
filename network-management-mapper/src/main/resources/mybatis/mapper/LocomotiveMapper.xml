<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.network.management.mapper.LocomotiveMapper">
    <resultMap id="BaseResultMap" type="Locomotive">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="ue_ip" jdbcType="VARCHAR" property="ueIp" />
        <result column="description" jdbcType="VARCHAR" property="desc" />
        <result column="imsi" jdbcType="VARCHAR" property="imsi" />
        <result column="num" jdbcType="INTEGER" property="num" />
        <result column="yn" jdbcType="TINYINT" property="yn" />
        <result column="modified" jdbcType="TIMESTAMP" property="modified" />
        <result column="created" jdbcType="TIMESTAMP" property="created" />
    </resultMap>
    <sql id="Base_Column_List">
        id, ue_ip, description, imsi, num, yn, modified, created
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from locomotive
        where id = #{id,jdbcType=INTEGER}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from locomotive
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="Locomotive">
        insert into locomotive (id, ue_ip, description, imsi, num, yn, modified, created)
        values (#{id,jdbcType=INTEGER}, #{ueIp,jdbcType=VARCHAR},
        #{desc,jdbcType=VARCHAR},#{imsi,jdbcType=VARCHAR}, #{num,jdbcType=INTEGER},#{yn,jdbcType=TINYINT},
        #{modified,jdbcType=TIMESTAMP}, #{created,jdbcType=TIMESTAMP})
    </insert>
    <update id="updateByPrimaryKey" parameterType="Locomotive">
        update locomotive
        set ue_ip = #{ueIp,jdbcType=VARCHAR},
            description = #{desc,jdbcType=VARCHAR},
            imsi = #{imsi,jdbcType=VARCHAR},
            num = #{num,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <select id="queryAllLocomotives" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from locomotive
    </select>

    <select id="getByConditions" parameterType="com.network.management.domain.search.LocomotiveSearch" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from locomotive
        where 1 = 1
        <if test="ueIp != null">
            AND ue_ip = #{ueIp,jdbcType=VARCHAR}
        </if>
        ORDER BY id DESC
        <if test="startIndex != null and pageSize != null">
            LIMIT #{startIndex}, #{pageSize}
        </if>
    </select>

    <select id="count" parameterType="com.network.management.domain.search.LocomotiveSearch" resultType="java.lang.Integer">
        select
        COUNT(1)
        from locomotive
        where 1 = 1
        <if test="ueIp != null">
            AND ue_ip = #{ueIp,jdbcType=VARCHAR}
        </if>
    </select>
</mapper>